{
  "version": 3,
  "sources": ["../../../worker.js"],
  "sourceRoot": "D:\\Projects\\chatwithproperties\\.wrangler\\tmp\\deploy-5wpXsB",
  "sourcesContent": ["// Cloudflare Worker for Hospitable Properties Viewer\r\n// Provides progressive loading, search, selection, clipboard functionality, and basic authentication\r\n\r\naddEventListener(\"fetch\", (event) => {\r\n  event.respondWith(handleRequest(event.request));\r\n});\r\n\r\nasync function handleRequest(request) {\r\n  const url = new URL(request.url);\r\n\r\n  // Handle login form submission\r\n  if (url.pathname === \"/login\" && request.method === \"POST\") {\r\n    return handleLogin(request);\r\n  }\r\n\r\n  // Public routes (no authentication required)\r\n  if (url.pathname === \"/login\" || url.pathname === \"/styles.css\") {\r\n    return handlePublicRoutes(request);\r\n  }\r\n\r\n  // Check authentication for all other routes\r\n  const authResult = await checkAuthentication(request);\r\n  if (!authResult.authenticated) {\r\n    return authResult.response;\r\n  }\r\n\r\n  // Authenticated routes\r\n  if (url.pathname === \"/\" || url.pathname === \"/index.html\") {\r\n    return getFileResponse(\"index.html\");\r\n  }\r\n\r\n  if (url.pathname === \"/app.js\") {\r\n    return getFileResponse(\"app.js\");\r\n  }\r\n\r\n  if (url.pathname === \"/api/properties\") {\r\n    return handlePropertiesAPI(request);\r\n  }\r\n\r\n  if (url.pathname.startsWith(\"/api/property/\")) {\r\n    return handlePropertyDetailsAPI(request);\r\n  }\r\n\r\n  return new Response(\"Not Found\", { status: 404 });\r\n}\r\n\r\n// Authentication functions\r\nasync function checkAuthentication(request) {\r\n  const cookies = parseCookies(request.headers.get(\"Cookie\") || \"\");\r\n  const sessionToken = cookies[\"session_token\"];\r\n\r\n  if (!sessionToken || sessionToken !== getValidSessionToken()) {\r\n    // Redirect to login page\r\n    return {\r\n      authenticated: false,\r\n      response: new Response(\"\", {\r\n        status: 302,\r\n        headers: {\r\n          Location: \"/login\",\r\n        },\r\n      }),\r\n    };\r\n  }\r\n\r\n  return { authenticated: true };\r\n}\r\n\r\nasync function handleLogin(request) {\r\n  try {\r\n    const formData = await request.formData();\r\n    const username = formData.get(\"username\");\r\n    const password = formData.get(\"password\");\r\n\r\n    // Check credentials\r\n    if (!AUTH_USERNAME || !AUTH_PASSWORD) {\r\n      return new Response(\"\", {\r\n        status: 302,\r\n        headers: {\r\n          Location: \"/login?error=config\",\r\n        },\r\n      });\r\n    }\r\n\r\n    if (username === AUTH_USERNAME && password === AUTH_PASSWORD) {\r\n      // Create session token\r\n      const sessionToken = getValidSessionToken();\r\n\r\n      return new Response(\"\", {\r\n        status: 302,\r\n        headers: {\r\n          Location: \"/\",\r\n          \"Set-Cookie\": `session_token=${sessionToken}; Path=/; HttpOnly; Secure; SameSite=Strict; Max-Age=86400`,\r\n        },\r\n      });\r\n    } else {\r\n      return new Response(\"\", {\r\n        status: 302,\r\n        headers: {\r\n          Location: \"/login?error=invalid\",\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    return new Response(\"\", {\r\n      status: 302,\r\n      headers: {\r\n        Location: \"/login?error=error\",\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nfunction parseCookies(cookieHeader) {\r\n  const cookies = {};\r\n  if (cookieHeader) {\r\n    cookieHeader.split(\";\").forEach((cookie) => {\r\n      const [name, value] = cookie.trim().split(\"=\");\r\n      if (name && value) {\r\n        cookies[name] = decodeURIComponent(value);\r\n      }\r\n    });\r\n  }\r\n  return cookies;\r\n}\r\n\r\nfunction getValidSessionToken() {\r\n  // Generate a simple session token based on credentials and date\r\n  // In production, you'd want something more secure\r\n  const today = new Date().toDateString();\r\n  return btoa(`${AUTH_USERNAME}:${today}`).replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\nasync function handlePublicRoutes(request) {\r\n  const url = new URL(request.url);\r\n\r\n  if (url.pathname === \"/login\") {\r\n    return getFileResponse(\"login.html\");\r\n  }\r\n\r\n  if (url.pathname === \"/styles.css\") {\r\n    return getFileResponse(\"styles.css\");\r\n  }\r\n\r\n  return new Response(\"Not Found\", { status: 404 });\r\n}\r\n\r\nfunction getFileResponse(filename) {\r\n  const content = getFileContent(filename);\r\n  const contentType = getContentType(filename);\r\n\r\n  return new Response(content, {\r\n    headers: { \"Content-Type\": contentType },\r\n  });\r\n}\r\n\r\nfunction getContentType(filename) {\r\n  if (filename.endsWith(\".html\")) return \"text/html\";\r\n  if (filename.endsWith(\".css\")) return \"text/css\";\r\n  if (filename.endsWith(\".js\")) return \"application/javascript\";\r\n  return \"text/plain\";\r\n}\r\n\r\nasync function handlePropertiesAPI(request) {\r\n  const url = new URL(request.url);\r\n  const page = url.searchParams.get(\"page\") || \"1\";\r\n  const perPage = url.searchParams.get(\"per_page\") || \"50\";\r\n\r\n  try {\r\n    // Check if API token exists\r\n    if (!HOSPITABLE_API_TOKEN) {\r\n      return new Response(\r\n        JSON.stringify({\r\n          error: \"API_TOKEN_MISSING\",\r\n          message:\r\n            \"Hospitable API token not configured. Please set the HOSPITABLE_API_TOKEN secret in Cloudflare Workers.\",\r\n        }),\r\n        {\r\n          status: 500,\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n    }\r\n\r\n    const apiUrl = `https://public.api.hospitable.com/v2/properties?page=${page}&per_page=${perPage}`;\r\n    const response = await fetch(apiUrl, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${HOSPITABLE_API_TOKEN}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      let errorMessage = \"API request failed\";\r\n      let errorType = \"API_ERROR\";\r\n\r\n      if (response.status === 401) {\r\n        errorType = \"AUTHENTICATION_ERROR\";\r\n        errorMessage = \"Authentication failed. Please check your API token.\";\r\n      } else if (response.status === 403) {\r\n        errorType = \"AUTHORIZATION_ERROR\";\r\n        errorMessage = \"Access forbidden. Please check your API permissions.\";\r\n      } else if (response.status === 429) {\r\n        errorType = \"RATE_LIMIT_ERROR\";\r\n        errorMessage = \"Rate limit exceeded. Please try again later.\";\r\n      }\r\n\r\n      return new Response(\r\n        JSON.stringify({\r\n          error: errorType,\r\n          message: errorMessage,\r\n          status: response.status,\r\n        }),\r\n        {\r\n          status: response.status,\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return new Response(JSON.stringify(data), {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  } catch (error) {\r\n    return new Response(\r\n      JSON.stringify({\r\n        error: \"NETWORK_ERROR\",\r\n        message:\r\n          \"Failed to connect to Hospitable API. Please check your internet connection.\",\r\n        details: error.message,\r\n      }),\r\n      {\r\n        status: 500,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nasync function handlePropertyDetailsAPI(request) {\r\n  const url = new URL(request.url);\r\n  const propertyId = url.pathname.split(\"/\").pop();\r\n\r\n  try {\r\n    if (!HOSPITABLE_API_TOKEN) {\r\n      return new Response(\r\n        JSON.stringify({\r\n          error: \"API_TOKEN_MISSING\",\r\n          message: \"Hospitable API token not configured.\",\r\n        }),\r\n        {\r\n          status: 500,\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n    }\r\n\r\n    const apiUrl = `https://public.api.hospitable.com/v2/properties/${propertyId}?include=listings,details`;\r\n    const response = await fetch(apiUrl, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${HOSPITABLE_API_TOKEN}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      let errorMessage = \"Failed to fetch property details\";\r\n      let errorType = \"API_ERROR\";\r\n\r\n      if (response.status === 401) {\r\n        errorType = \"AUTHENTICATION_ERROR\";\r\n        errorMessage = \"Authentication failed. Please check your API token.\";\r\n      } else if (response.status === 404) {\r\n        errorType = \"NOT_FOUND_ERROR\";\r\n        errorMessage = \"Property not found.\";\r\n      }\r\n\r\n      return new Response(\r\n        JSON.stringify({\r\n          error: errorType,\r\n          message: errorMessage,\r\n          status: response.status,\r\n        }),\r\n        {\r\n          status: response.status,\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return new Response(JSON.stringify(data), {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n  } catch (error) {\r\n    return new Response(\r\n      JSON.stringify({\r\n        error: \"NETWORK_ERROR\",\r\n        message: \"Failed to fetch property details.\",\r\n        details: error.message,\r\n      }),\r\n      {\r\n        status: 500,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nfunction getFileContent(filename) {\r\n  switch (filename) {\r\n    case \"index.html\":\r\n      return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Hospitable Properties Viewer</title>\r\n    <link rel=\"stylesheet\" href=\"/styles.css\" />\r\n  </head>\r\n  <body>\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <h1>\uD83C\uDFE0 Hospitable Properties Viewer</h1>\r\n        <p>\r\n          Browse, search, and export property data to chat with AI (ChatGPT,\r\n          Claude, etc.)\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"error-banner\" id=\"errorBanner\">\r\n        <strong>Error:</strong> <span id=\"errorMessage\"></span>\r\n      </div>\r\n\r\n      <div class=\"controls\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"search-box\"\r\n          id=\"searchBox\"\r\n          placeholder=\"Search by property name or address...\"\r\n        />\r\n        <div class=\"selection-info\">\r\n          <span id=\"selectedCount\">0 selected</span>\r\n          <button\r\n            class=\"btn btn-secondary\"\r\n            id=\"selectAllButton\"\r\n            onclick=\"selectAllVisible()\"\r\n          >\r\n            \u2611\uFE0F Select All\r\n          </button>\r\n          <button\r\n            class=\"btn btn-secondary\"\r\n            id=\"deselectAllButton\"\r\n            onclick=\"deselectAll()\"\r\n            style=\"display: none\"\r\n          >\r\n            \u2610 Deselect All\r\n          </button>\r\n          <button\r\n            class=\"btn btn-success\"\r\n            id=\"copyButton\"\r\n            onclick=\"copySelectedProperties()\"\r\n            disabled\r\n          >\r\n            \uD83D\uDCCB Copy Selected to Clipboard\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"progress-info\" id=\"progressInfo\" style=\"display: none\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p id=\"progressText\">Loading properties...</p>\r\n      </div>\r\n\r\n      <div class=\"properties-grid\" id=\"propertiesGrid\"></div>\r\n\r\n      <div class=\"load-more\" id=\"loadMoreContainer\" style=\"display: none\">\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          id=\"loadMoreBtn\"\r\n          onclick=\"loadMoreProperties()\"\r\n        >\r\n          Load More Properties\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"no-results\" id=\"noResults\" style=\"display: none\">\r\n        <h3>No properties found</h3>\r\n        <p>Try adjusting your search criteria or check the API connection.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <script src=\"/app.js\"></script>\r\n  </body>\r\n</html>\r\n`;\r\n\r\n    case \"login.html\":\r\n      return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Login - Hospitable Properties Viewer</title>\r\n    <link rel=\"stylesheet\" href=\"/styles.css\" />\r\n  </head>\r\n  <body>\r\n    <div class=\"auth-container\">\r\n      <form class=\"auth-form\" method=\"POST\" action=\"/login\">\r\n        <h2>\uD83C\uDFE0 Properties Viewer</h2>\r\n        <p>Please login to access the properties dashboard</p>\r\n\r\n        <div id=\"authError\" class=\"auth-error\" style=\"display: none\"></div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username:</label>\r\n          <input type=\"text\" id=\"username\" name=\"username\" required />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" required />\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n      </form>\r\n    </div>\r\n\r\n    <script>\r\n      // Show error message if present in URL\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const error = urlParams.get(\"error\");\r\n      if (error) {\r\n        const errorDiv = document.getElementById(\"authError\");\r\n        errorDiv.textContent =\r\n          \"Invalid username or password. Please try again.\";\r\n        errorDiv.style.display = \"block\";\r\n      }\r\n    </script>\r\n  </body>\r\n</html>\r\n`;\r\n\r\n    case \"app.js\":\r\n      return `// Application state\r\nlet allProperties = [];\r\nlet filteredProperties = [];\r\nlet selectedProperties = new Set();\r\nlet currentPage = 1;\r\nlet isLoading = false;\r\nlet hasMorePages = true;\r\nlet totalProperties = 0;\r\nlet loadedProperties = 0;\r\n\r\n// DOM elements\r\nconst searchBox = document.getElementById(\"searchBox\");\r\nconst propertiesGrid = document.getElementById(\"propertiesGrid\");\r\nconst selectedCount = document.getElementById(\"selectedCount\");\r\nconst copyButton = document.getElementById(\"copyButton\");\r\nconst selectAllButton = document.getElementById(\"selectAllButton\");\r\nconst deselectAllButton = document.getElementById(\"deselectAllButton\");\r\nconst loadMoreBtn = document.getElementById(\"loadMoreBtn\");\r\nconst loadMoreContainer = document.getElementById(\"loadMoreContainer\");\r\nconst progressInfo = document.getElementById(\"progressInfo\");\r\nconst progressText = document.getElementById(\"progressText\");\r\nconst errorBanner = document.getElementById(\"errorBanner\");\r\nconst errorMessage = document.getElementById(\"errorMessage\");\r\nconst noResults = document.getElementById(\"noResults\");\r\n\r\n// Initialize the application\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  searchBox.addEventListener(\"input\", debounce(handleSearch, 300));\r\n  loadInitialProperties();\r\n});\r\n\r\n// Load initial batch of properties\r\nasync function loadInitialProperties() {\r\n  showLoading(\"Loading all properties with full details...\");\r\n  currentPage = 1;\r\n  allProperties = [];\r\n\r\n  // Auto-load all properties first\r\n  await loadAllProperties();\r\n  \r\n  // Now load full details for all properties\r\n  await loadAllPropertyDetails();\r\n  \r\n  // Now render everything\r\n  filteredProperties = allProperties;\r\n  renderProperties();\r\n  hideLoading();\r\n\r\n  if (allProperties.length > 0) {\r\n    showCompletionMessage();\r\n  }\r\n}// Auto-load all properties from all pages\r\nasync function loadAllProperties() {\r\n  let keepLoading = true;\r\n\r\n  while (keepLoading) {\r\n    await loadProperties();\r\n    keepLoading = hasMorePages;\r\n    if (keepLoading) {\r\n      currentPage++;\r\n      // Update loading message\r\n      showLoading(\r\n        \\`Loading properties... \\${loadedProperties}/\\${totalProperties || \"?\"}\\`\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// Load properties from API\r\nasync function loadProperties() {\r\n  if (isLoading) return;\r\n\r\n  isLoading = true;\r\n  loadMoreBtn.disabled = true;\r\n\r\n  try {\r\n    const response = await fetch(\r\n      \\`/api/properties?page=\\${currentPage}&per_page=100\\`\r\n    );\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || \"Failed to load properties\");\r\n    }\r\n\r\n    if (data.error) {\r\n      showError(data.message, data.error);\r\n      hideLoading();\r\n      return;\r\n    }\r\n\r\n    // Update totals\r\n    totalProperties = data.meta.total;\r\n    loadedProperties += data.data.length;\r\n\r\n    // Add new properties to our collection\r\n    allProperties.push(...data.data);\r\n\r\n    // Update totals display\r\n    updateProgress();\r\n\r\n    // Check if there are more pages\r\n    hasMorePages = data.meta.current_page < data.meta.last_page;\r\n\r\n    // Don't render during auto-load, wait until all are loaded\r\n    loadMoreContainer.style.display = \"none\";\r\n  } catch (error) {\r\n    console.error(\"Error loading properties:\", error);\r\n    showError(error.message, \"LOAD_ERROR\");\r\n    hideLoading();\r\n  }\r\n\r\n  isLoading = false;\r\n  loadMoreBtn.disabled = false;\r\n}\r\n\r\n// Load full details for all properties\r\nasync function loadAllPropertyDetails() {\r\n  const total = allProperties.length;\r\n  let loaded = 0;\r\n  \r\n  showLoading(\\`Loading full details for all properties... 0/\\${total}\\`);\r\n  \r\n  // Load details in batches to avoid overwhelming the API\r\n  const batchSize = 5;\r\n  for (let i = 0; i < allProperties.length; i += batchSize) {\r\n    const batch = allProperties.slice(i, i + batchSize);\r\n    \r\n    await Promise.all(\r\n      batch.map(async (property) => {\r\n        try {\r\n          const response = await fetch(\\`/api/property/\\${property.id}\\`);\r\n          const data = await response.json();\r\n          \r\n          if (response.ok && !data.error) {\r\n            // Update property with full details\r\n            const index = allProperties.findIndex(p => p.id === property.id);\r\n            if (index !== -1) {\r\n              allProperties[index] = {\r\n                ...allProperties[index],\r\n                ...data.data,\r\n                _detailsLoaded: true,\r\n              };\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\\`Failed to load details for property \\${property.id}:\\`, error);\r\n        }\r\n        \r\n        loaded++;\r\n        showLoading(\\`Loading full details... \\${loaded}/\\${total}\\`);\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n// Load more properties\r\nasync function loadMoreProperties() {\r\n  if (!hasMorePages || isLoading) return;\r\n\r\n  showLoading(\r\n    \\`Loading more properties... (\\${loadedProperties}/\\${totalProperties})\\`\r\n  );\r\n  currentPage++;\r\n  await loadProperties();\r\n}\r\n\r\n// Handle search - focuses on property name and address only\r\nfunction handleSearch() {\r\n  const query = searchBox.value.toLowerCase().trim();\r\n\r\n  if (query === \"\") {\r\n    filteredProperties = allProperties;\r\n  } else {\r\n    filteredProperties = allProperties.filter((property) => {\r\n      // Primary: Search by property name\r\n      const nameMatch = property.name?.toLowerCase().includes(query) || false;\r\n      const publicNameMatch =\r\n        property.public_name?.toLowerCase().includes(query) || false;\r\n      // Secondary: Search by address (with null check)\r\n      const addressMatch =\r\n        property.address?.display?.toLowerCase().includes(query) || false;\r\n\r\n      return nameMatch || publicNameMatch || addressMatch;\r\n    });\r\n  }\r\n\r\n  renderProperties();\r\n}\r\n\r\n// Render properties in the grid\r\nfunction renderProperties() {\r\n  const propertiesToShow =\r\n    filteredProperties.length > 0 || searchBox.value.trim() !== \"\"\r\n      ? filteredProperties\r\n      : allProperties;\r\n\r\n  propertiesGrid.innerHTML = \"\";\r\n\r\n  if (propertiesToShow.length === 0) {\r\n    if (allProperties.length === 0 && !isLoading) {\r\n      noResults.style.display = \"block\";\r\n    }\r\n    return;\r\n  }\r\n\r\n  noResults.style.display = \"none\";\r\n\r\n  propertiesToShow.forEach((property) => {\r\n    const propertyCard = createPropertyCard(property);\r\n    propertiesGrid.appendChild(propertyCard);\r\n  });\r\n\r\n  updateSelectionUI();\r\n}\r\n\r\n// Create property card HTML - compact table-like design\r\nfunction createPropertyCard(property) {\r\n  const card = document.createElement(\"div\");\r\n  card.className = \"property-card\";\r\n  card.dataset.propertyId = property.id;\r\n\r\n  if (selectedProperties.has(property.id)) {\r\n    card.classList.add(\"selected\");\r\n  }\r\n\r\n  const statusClass = property.listed ? \"status-listed\" : \"status-unlisted\";\r\n  const statusText = property.listed ? \"Listed\" : \"Unlisted\";\r\n\r\n  card.innerHTML = \\`\r\n        <div class=\"property-content-compact\">\r\n            <div class=\"property-row\">\r\n                <div class=\"property-info\">\r\n                    <input type=\"checkbox\" class=\"property-checkbox\" \r\n                           onchange=\"togglePropertySelection('\\${property.id}')\"\r\n                           \\${\r\n                             selectedProperties.has(property.id)\r\n                               ? \"checked\"\r\n                               : \"\"\r\n                           }>\r\n                    <div class=\"property-text\">\r\n                        <h4 class=\"property-title-compact\">\\${\r\n                          property.name || \"Unnamed Property\"\r\n                        }</h4>\r\n                        \\${\r\n                          property.public_name\r\n                            ? \\`<span class=\"property-name-compact\">\\${property.public_name}</span>\\`\r\n                            : \"\"\r\n                        }\r\n                        <span class=\"property-status \\${statusClass}\">\\${statusText}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"property-specs\">\r\n                    <span>\uD83C\uDFE0 \\${property.property_type || \"N/A\"}</span>\r\n                    <span>\uD83D\uDECF\uFE0F \\${property.capacity?.bedrooms || 0}br</span>\r\n                    <span>\uD83D\uDEC1 \\${property.capacity?.bathrooms || 0}ba</span>\r\n                </div>\r\n                \r\n                <div class=\"property-address-compact\">\r\n                    \uD83D\uDCCD \\${property.address?.display || \"Address not available\"}\r\n                </div>\r\n                \r\n                <div class=\"property-details-status\">\r\n                    \\${property._detailsLoaded ? '<span class=\"details-loaded\">\u2705 Full Details</span>' : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \\`;\r\n\r\n  return card;\r\n}\r\n\r\n// Toggle property selection\r\nfunction togglePropertySelection(propertyId) {\r\n  if (selectedProperties.has(propertyId)) {\r\n    selectedProperties.delete(propertyId);\r\n  } else {\r\n    selectedProperties.add(propertyId);\r\n  }\r\n\r\n  updateSelectionUI();\r\n}\r\n\r\n// Update selection UI\r\nfunction updateSelectionUI() {\r\n  const count = selectedProperties.size;\r\n  selectedCount.textContent = \\`\\${count} selected\\`;\r\n  copyButton.disabled = count === 0;\r\n\r\n  // Show/hide select/deselect all buttons\r\n  const visibleProperties =\r\n    filteredProperties.length > 0 || searchBox.value.trim() !== \"\"\r\n      ? filteredProperties\r\n      : allProperties;\r\n\r\n  const allVisibleSelected =\r\n    visibleProperties.length > 0 &&\r\n    visibleProperties.every((p) => selectedProperties.has(p.id));\r\n\r\n  if (allVisibleSelected && count > 0) {\r\n    selectAllButton.style.display = \"none\";\r\n    deselectAllButton.style.display = \"inline-block\";\r\n  } else {\r\n    selectAllButton.style.display = \"inline-block\";\r\n    deselectAllButton.style.display = \"none\";\r\n  }\r\n\r\n  // Update card styling\r\n  document.querySelectorAll(\".property-card\").forEach((card) => {\r\n    const propertyId = card.dataset.propertyId;\r\n    const checkbox = card.querySelector(\".property-checkbox\");\r\n    if (selectedProperties.has(propertyId)) {\r\n      card.classList.add(\"selected\");\r\n      if (checkbox) checkbox.checked = true;\r\n    } else {\r\n      card.classList.remove(\"selected\");\r\n      if (checkbox) checkbox.checked = false;\r\n    }\r\n  });\r\n}\r\n\r\n// Select all visible properties (in search results)\r\nfunction selectAllVisible() {\r\n  const propertiesToSelect =\r\n    filteredProperties.length > 0 || searchBox.value.trim() !== \"\"\r\n      ? filteredProperties\r\n      : allProperties;\r\n\r\n  propertiesToSelect.forEach((property) => {\r\n    selectedProperties.add(property.id);\r\n  });\r\n\r\n  updateSelectionUI();\r\n}\r\n\r\n// Deselect all properties\r\nfunction deselectAll() {\r\n  selectedProperties.clear();\r\n  updateSelectionUI();\r\n}\r\n\r\n// Copy selected properties to clipboard\r\nasync function copySelectedProperties() {\r\n  if (selectedProperties.size === 0) return;\r\n\r\n  const selectedData = allProperties.filter((property) =>\r\n    selectedProperties.has(property.id)\r\n  );\r\n\r\n  showLoading(\\`Copying \\${selectedData.length} properties with full details...\\`);\r\n\r\n  try {\r\n    const jsonData = JSON.stringify(selectedData, null, 2);\r\n    await navigator.clipboard.writeText(jsonData);\r\n\r\n    // Visual feedback\r\n    const originalText = copyButton.textContent;\r\n    copyButton.textContent = \"\u2705 Copied!\";\r\n    hideLoading();\r\n\r\n    setTimeout(() => {\r\n      copyButton.textContent = originalText;\r\n    }, 2000);\r\n  } catch (error) {\r\n    console.error(\"Failed to copy to clipboard:\", error);\r\n    hideLoading();\r\n\r\n    // Fallback: show data in a modal or new window\r\n    const jsonData = JSON.stringify(selectedData, null, 2);\r\n    const newWindow = window.open(\"\", \"_blank\");\r\n    newWindow.document.write(\\`\r\n            <html>\r\n                <head><title>Selected Properties Data</title></head>\r\n                <body>\r\n                    <h3>Selected Properties JSON Data (Full Details)</h3>\r\n                    <p>Copy the data below:</p>\r\n                    <textarea style=\"width: 100%; height: 400px;\">\\${jsonData}</textarea>\r\n                </body>\r\n            </html>\r\n        \\`);\r\n  }\r\n}\r\n\r\n// Update progress information\r\nfunction updateProgress() {\r\n  if (totalProperties > 0) {\r\n    progressText.textContent = \\`Loaded \\${loadedProperties} of \\${totalProperties} properties\\`;\r\n  }\r\n}\r\n\r\n// Show completion message\r\nfunction showCompletionMessage() {\r\n  progressInfo.style.display = \"block\";\r\n  progressInfo.style.backgroundColor = \"#d4edda\";\r\n  progressInfo.style.color = \"#155724\";\r\n  progressText.textContent = \\`\u2705 All \\${totalProperties} properties loaded successfully!\\`;\r\n\r\n  // Hide after 3 seconds\r\n  setTimeout(() => {\r\n    progressInfo.style.display = \"none\";\r\n    progressInfo.style.backgroundColor = \"white\";\r\n    progressInfo.style.color = \"#333\";\r\n  }, 3000);\r\n}\r\n\r\n// Show loading state\r\nfunction showLoading(message) {\r\n  progressInfo.style.display = \"block\";\r\n  progressText.textContent = message;\r\n  hideError();\r\n}\r\n\r\n// Hide loading state\r\nfunction hideLoading() {\r\n  progressInfo.style.display = \"none\";\r\n}\r\n\r\n// Show error message\r\nfunction showError(message, type) {\r\n  errorMessage.textContent = message;\r\n  errorBanner.classList.add(\"show\");\r\n\r\n  // Auto-hide error after 10 seconds\r\n  setTimeout(hideError, 10000);\r\n}\r\n\r\n// Hide error message\r\nfunction hideError() {\r\n  errorBanner.classList.remove(\"show\");\r\n}\r\n\r\n// Debounce function for search\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n`;\r\n\r\n    case \"styles.css\":\r\n      return `* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\r\n  line-height: 1.6;\r\n  color: #333;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header h1 {\r\n  color: #2c3e50;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  min-width: 300px;\r\n  padding: 12px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n}\r\n\r\n.search-box:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n}\r\n\r\n.btn {\r\n  padding: 12px 20px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #3498db;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  background-color: #bdc3c7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-success {\r\n  background-color: #27ae60;\r\n  color: white;\r\n}\r\n\r\n.btn-success:hover {\r\n  background-color: #219a52;\r\n}\r\n\r\n.btn-success:disabled {\r\n  background-color: #bdc3c7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #95a5a6;\r\n  color: white;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: #7f8c8d;\r\n}\r\n\r\n.btn-secondary:disabled {\r\n  background-color: #bdc3c7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.selection-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.error-banner {\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  padding: 15px;\r\n  border-radius: 6px;\r\n  margin-bottom: 20px;\r\n  display: none;\r\n}\r\n\r\n.error-banner.show {\r\n  display: block;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 40px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading-spinner {\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #3498db;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.properties-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.property-card {\r\n  background: white;\r\n  border-radius: 6px;\r\n  border: 1px solid #e1e5e9;\r\n  transition: border-color 0.2s, box-shadow 0.2s;\r\n  padding: 12px;\r\n}\r\n\r\n.property-card:hover {\r\n  border-color: #3498db;\r\n  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.15);\r\n}\r\n\r\n.property-card.selected {\r\n  border-color: #3498db;\r\n  background-color: #f8fbff;\r\n  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.2);\r\n}\r\n\r\n.property-content-compact {\r\n  width: 100%;\r\n}\r\n\r\n.property-row {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr 2fr auto;\r\n  gap: 15px;\r\n  align-items: center;\r\n}\r\n\r\n.property-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.property-checkbox {\r\n  width: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n}\r\n\r\n.property-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.property-title-compact {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n  line-height: 1.2;\r\n}\r\n\r\n.property-name-compact {\r\n  font-size: 12px;\r\n  color: #7f8c8d;\r\n  font-weight: 500;\r\n}\r\n\r\n.property-specs {\r\n  display: flex;\r\n  gap: 12px;\r\n  font-size: 13px;\r\n  color: #495057;\r\n  font-weight: 500;\r\n}\r\n\r\n.property-address-compact {\r\n  font-size: 13px;\r\n  color: #6c757d;\r\n  max-width: 300px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.property-details-status {\r\n  text-align: right;\r\n}\r\n\r\n.details-loaded {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 11px;\r\n  font-weight: 500;\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n}\r\n\r\n.property-actions-compact {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.btn-details-compact {\r\n  background-color: #f8f9fa;\r\n  color: #495057;\r\n  border: 1px solid #dee2e6;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n}\r\n\r\n.btn-details-compact:hover {\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.btn-details-compact:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.property-status {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.status-listed {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n}\r\n\r\n.status-unlisted {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n}\r\n\r\n.load-more {\r\n  text-align: center;\r\n  margin: 30px 0;\r\n}\r\n\r\n.progress-info {\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.no-results {\r\n  text-align: center;\r\n  padding: 40px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  color: #7f8c8d;\r\n}\r\n\r\n/* Authentication Styles */\r\n.auth-container {\r\n  max-width: 400px;\r\n  margin: 100px auto;\r\n  padding: 30px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.auth-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.auth-form h2 {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.auth-form p {\r\n  text-align: center;\r\n  color: #7f8c8d;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: 500;\r\n  color: #2c3e50;\r\n}\r\n\r\n.form-group input {\r\n  padding: 12px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n}\r\n\r\n.form-group input:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n}\r\n\r\n.auth-error {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .controls {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n  }\r\n\r\n  .search-box {\r\n    min-width: auto;\r\n  }\r\n\r\n  .selection-info {\r\n    justify-content: center;\r\n  }\r\n\r\n  .property-row {\r\n    grid-template-columns: 1fr;\r\n    gap: 8px;\r\n  }\r\n\r\n  .property-info {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .property-specs {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .property-address-compact {\r\n    max-width: none;\r\n    white-space: normal;\r\n  }\r\n\r\n  .property-actions-compact {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .auth-container {\r\n    margin: 50px 20px;\r\n  }\r\n}\r\n`;\r\n\r\n    default:\r\n      return \"File not found\";\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
